// Code generated by goadlc v3 - DO NOT EDIT.
package struct_of_structs

import ()

type Bar struct {
	D string `json:"d"`
}

func New_Bar(
	d string,
) Bar {
	return Bar{
		D: d,
	}
}

func Make_Bar(
	d string,
) Bar {
	ret := Bar{
		D: d,
	}
	return ret
}

type Fizz struct {
	A Foo   `json:"A"`
	B Bar   `json:"B"`
	C *Fizz `json:"c"`
}

func New_Fizz(
	a Foo,
	b Bar,
	c *Fizz,
) Fizz {
	return Fizz{
		A: a,
		B: b,
		C: c,
	}
}

func Make_Fizz(
	a Foo,
	b Bar,
	c *Fizz,
) Fizz {
	ret := Fizz{
		A: a,
		B: b,
		C: c,
	}
	return ret
}

type Foo struct {
	D int32 `json:"d"`
}

func New_Foo(
	d int32,
) Foo {
	return Foo{
		D: d,
	}
}

func Make_Foo(
	d int32,
) Foo {
	ret := Foo{
		D: d,
	}
	return ret
}

type StructOfStruct struct {
	A Foo  `json:"A"`
	B Bar  `json:"B"`
	C Fizz `json:"c"`
}

func New_StructOfStruct(
	a Foo,
	b Bar,
	c Fizz,
) StructOfStruct {
	return StructOfStruct{
		A: a,
		B: b,
		C: c,
	}
}

func Make_StructOfStruct(
	a Foo,
	b Bar,
	c Fizz,
) StructOfStruct {
	ret := StructOfStruct{
		A: a,
		B: b,
		C: c,
	}
	return ret
}
