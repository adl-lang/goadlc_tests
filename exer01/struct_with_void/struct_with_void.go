// Code generated by goadlc v3 - DO NOT EDIT.
package struct_with_void

import ()

type StructB[X any] struct {
	_StructB[X]
}

type _StructB[X any] struct {
	B struct{} `json:"B"`
}

func MakeAll_StructB[X any]() StructB[X] {
	return StructB[X]{
		_StructB[X]{
			B: struct{}{},
		},
	}
}

func Make_StructB[X any]() StructB[X] {
	ret := StructB[X]{
		_StructB[X]{
			B: struct{}{},
		},
	}
	return ret
}

type StructC = StructOf

type StructOf struct {
	_StructOf
}

type _StructOf struct {
	A struct{} `json:"A"`
}

func MakeAll_StructOf() StructOf {
	return StructOf{
		_StructOf{
			A: struct{}{},
		},
	}
}

func Make_StructOf() StructOf {
	ret := StructOf{
		_StructOf{
			A: struct{}{},
		},
	}
	return ret
}
